%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Twee
file_extensions:
  - tw
scope: text.twee
contexts:

  main:
    - match: '::'
      scope: punctuation.definition.passage.start
      push: passage

    # Macros
    - match: '(<<(/)?)((=|\-|actions|addclass|append|audio|back|break|button|cacheaudio|capture|checkbox|choice|continue|copy|createaudiogroup|createplaylist|cycle|elseif|else|for|goto|if|include|link|linkappend|linkprepend|linkreplace|listbox|masteraudio|nobr|playlist|prepend|print|radiobutton|remove|removeclass|removeplaylist|repeat|replace|return|run|script|set|silently|stop|switch|textarea|textbox|timed|toggleclass|unset|waitforaudio|widget)\b|([\w]*))'
      captures:
        1: punctuation.section.macro.begin.twee
        4: variable.macro.language
        5: variable.macro.user
      push: macro

    # Comments
    - match: '/\*'
      scope: comment.block.punctuation.definition.begin.twee
      push: comment

    # Links
    - match: '(\[\[)'
      scope: punctuation.definition.link.begin.twee
      push: link

    # Markup
    - match: "''"
      push: bold
    - match: "//"
      push: italic
    - match: __
      push: underline

    # Nowiki
    - match: '"""'
      set:
        - match: '"""'
          pop: true

    # Headings
    - match: '^\s*(!{1,6})[^\n!]+'
      scope: markup.heading
      captures:
        1: punctuation.definition.heading

    # Lists
    - match: '^(#)[^\n]+'
      captures:
        1: markup.list.numbered.bullet

    - match: '^(\*)(?=[^\n]+)'
      captures:
        1: markup.list.unnumbered.bullet

    # Nowiki $$
    - match: '\$\$[A-Za-z0-9_$]*'

    - include: variables
    - include: scope:text.html.basic

############### MARKUP ###############
  bold:
    - meta_scope: markup.bold
    - match: "''"
      pop: true
    - include: main

  italic:
    - meta_scope: markup.italic
    - match: '//'
      pop: true
    - include: main

  underline:
    - meta_scope: markup.underline
    - match: __
      pop: true
    - include: main
  
############### MACRO ###############
  macro:
    - meta_content_scope: meta.macro.content
    - match: (>>)
      scope: punctuation.section.macro.end.twee
      pop: true
    - include: content
    - match: '[\w]*'
      scope: invalid.illegal.stray-text

############### BRACKETS ###############
  brackets:
    - meta_scope: meta.brackets
    - match: '\]'
      scope: punctuation.definition.bracket.end
      pop: true
    - include: string
    - include: numerics
    - include: variables

############### COMEMNT ###############
  comment:
    - meta_content_scope: comment.block.twee
    - match: \*/
      scope: comment.block.punctuation.definition.end.twee
      pop: true

############### CONTENT ###############
  content:
    - include: numerics
    - match: '(\[\[)'
      scope: punctuation.definition.link.begin.twee
      push: link

    - include: variables
    - include: string

    - match: \b(eq|neq|gt|gte|lt|lte|and|or|not|to|is)\b
      scope: keyword.operator.word.twee

    - match: \b(range|autofocus|checked|t8n)\b
      scope: keyword.other.macro-keyword.twee

    - match: '(?==\s*\{)'
      embed: curly
      escape: '\}'

    - match: '!|%|&|\*|\-\-|\-|\+\+|\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\|\||\?\:|\*=|(?<!\()/=|%=|\+=|\-=|&=|\^=|\b(in|instanceof|new|delete|typeof|void)\b'
      scope: keyword.operator.js

    - match: (true|false)
      scope: constant.language

    # Functions
    - match: '(\w*\.)?(\w+\()'
      push: function

    - match: \(
      scope: punctuation.section.parens.begin
      push: parenthesis
    - match: \)
      scope: invalid.illegal.stray-parent-end


############### CURLY ###############
  curly:
    - match: '\}'
      pop: true
    - include: scope:source.js
    

############### FUNCTION ###############
  function:
    - meta_scope: entity.name.function
    - match: \)
      pop: true
    - include: content

############### LINK ###############
  link:
    - meta_content_scope: markup.underline.link
    - match: '\]\]'
      scope: punctuation.definition.link.end.twee
      pop: true
    - match: '\|'
      scope: punctuation.definition.link.middle.twee
    - match: (\]\[)
      scope: punctuation.definition.link.setter.twee
      set:
        - include: content
        - match: '\]\]'
          scope: punctuation.definition.link.end.twee
          pop: true
    - include: variables

############### NUMERICS ###############
  numerics:
    - match: '\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b'
      scope: constant.numeric.twee

############### PARENTHESIS ###############
  parenthesis:
    - meta_content_scope: meta.parens
    - match: \)
      scope: punctuation.section.parens.end
      pop: true
    - include: content

############### PASSAGE ###############
  passage:
    - match: '\n'
      pop: true
    - match: '[^\[\{\n]*'
      scope: variable.other.passage.name
    - match: '\[.*\bscript\b.*\]'
      push:
        - meta_scope: meta.js
        - meta_content_scope: source.embeded.js
        - match: ^(::)
          pop: true
        - include: scope:source.js
    - match: \[.*\]
      scope: variable.other.passage.tag
    - include: scope:source.json

############### STRING ###############
  string:
    - match: '"'
      push: stringDouble
    - match: "'"
      push: stringSimple

  stringDouble:
    - meta_scope: string.quoted.double.twee
    - match: '"'
      pop: true

  stringSimple:
    - meta_scope: string.quoted.simple.twee
    - match: "'"
      pop: true

############### VARIABLES ###############
  variables:
    - match: '(\$[A-Za-z_$][A-Za-z0-9_$]*)(\.[A-Za-z0-9$_.]*)*'
      captures:
        1: variable.other.story
        2: variable.parameter

    - match: '(_[A-Za-z_$][A-Za-z0-9_$]*)(\.[A-Za-z0-9$_.]*)?'
      captures:
        1: variable.other.temporary
        2: variable.parameter

    - match: '\['
      scope: punctuation.definition.bracket.begin
      push: brackets
